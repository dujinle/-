{"version":3,"sources":["emitter.js"],"names":["module","exports","Emitter","window","EventEmitter","obj","mixin","key","prototype","on","addEventListener","event","fn","_callbacks","push","once","self","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","callbacks","cb","i","splice","emit","args","slice","call","len","listeners","hasListeners"],"mappings":";;;;;;AACA;;;;AAIAA,OAAOC,OAAP,GAAiBC,OAAjB;;AAEAC,OAAOC,YAAP,GAAsBF,OAAtB;;AAEA;;;;;;AAMA,SAASA,OAAT,CAAiBG,GAAjB,EAAsB;AACpB,MAAIA,GAAJ,EAAS,OAAOC,MAAMD,GAAN,CAAP;AACV;;AAED;;;;;;;;AAQA,SAASC,KAAT,CAAeD,GAAf,EAAoB;AAClB,OAAK,IAAIE,GAAT,IAAgBL,QAAQM,SAAxB,EAAmC;AACjCH,QAAIE,GAAJ,IAAWL,QAAQM,SAAR,CAAkBD,GAAlB,CAAX;AACD;AACD,SAAOF,GAAP;AACD;;AAED;;;;;;;;;AASAH,QAAQM,SAAR,CAAkBC,EAAlB,GACAP,QAAQM,SAAR,CAAkBE,gBAAlB,GAAqC,UAASC,KAAT,EAAgBC,EAAhB,EAAmB;AACtD,OAAKC,UAAL,GAAkB,KAAKA,UAAL,IAAmB,EAArC;AACA,GAAC,KAAKA,UAAL,CAAgBF,KAAhB,IAAyB,KAAKE,UAAL,CAAgBF,KAAhB,KAA0B,EAApD,EACGG,IADH,CACQF,EADR;AAEA,SAAO,IAAP;AACD,CAND;;AAQA;;;;;;;;;;AAUAV,QAAQM,SAAR,CAAkBO,IAAlB,GAAyB,UAASJ,KAAT,EAAgBC,EAAhB,EAAmB;AAC1C,MAAII,OAAO,IAAX;AACA,OAAKH,UAAL,GAAkB,KAAKA,UAAL,IAAmB,EAArC;;AAEA,WAASJ,EAAT,GAAc;AACZO,SAAKC,GAAL,CAASN,KAAT,EAAgBF,EAAhB;AACAG,OAAGM,KAAH,CAAS,IAAT,EAAeC,SAAf;AACD;;AAEDV,KAAGG,EAAH,GAAQA,EAAR;AACA,OAAKH,EAAL,CAAQE,KAAR,EAAeF,EAAf;AACA,SAAO,IAAP;AACD,CAZD;;AAcA;;;;;;;;;;AAUAP,QAAQM,SAAR,CAAkBS,GAAlB,GACAf,QAAQM,SAAR,CAAkBY,cAAlB,GACAlB,QAAQM,SAAR,CAAkBa,kBAAlB,GACAnB,QAAQM,SAAR,CAAkBc,mBAAlB,GAAwC,UAASX,KAAT,EAAgBC,EAAhB,EAAmB;AACzD,OAAKC,UAAL,GAAkB,KAAKA,UAAL,IAAmB,EAArC;;AAEA;AACA,MAAI,KAAKM,UAAUI,MAAnB,EAA2B;AACzB,SAAKV,UAAL,GAAkB,EAAlB;AACA,WAAO,IAAP;AACD;;AAED;AACA,MAAIW,YAAY,KAAKX,UAAL,CAAgBF,KAAhB,CAAhB;AACA,MAAI,CAACa,SAAL,EAAgB,OAAO,IAAP;;AAEhB;AACA,MAAI,KAAKL,UAAUI,MAAnB,EAA2B;AACzB,WAAO,KAAKV,UAAL,CAAgBF,KAAhB,CAAP;AACA,WAAO,IAAP;AACD;;AAED;AACA,MAAIc,EAAJ;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,UAAUD,MAA9B,EAAsCG,GAAtC,EAA2C;AACzCD,SAAKD,UAAUE,CAAV,CAAL;AACA,QAAID,OAAOb,EAAP,IAAaa,GAAGb,EAAH,KAAUA,EAA3B,EAA+B;AAC7BY,gBAAUG,MAAV,CAAiBD,CAAjB,EAAoB,CAApB;AACA;AACD;AACF;AACD,SAAO,IAAP;AACD,CAhCD;;AAkCA;;;;;;;;AAQAxB,QAAQM,SAAR,CAAkBoB,IAAlB,GAAyB,UAASjB,KAAT,EAAe;AACtC,OAAKE,UAAL,GAAkB,KAAKA,UAAL,IAAmB,EAArC;AACA,MAAIgB,OAAO,GAAGC,KAAH,CAASC,IAAT,CAAcZ,SAAd,EAAyB,CAAzB,CAAX;AAAA,MACIK,YAAY,KAAKX,UAAL,CAAgBF,KAAhB,CADhB;;AAGA,MAAIa,SAAJ,EAAe;AACbA,gBAAYA,UAAUM,KAAV,CAAgB,CAAhB,CAAZ;AACA,SAAK,IAAIJ,IAAI,CAAR,EAAWM,MAAMR,UAAUD,MAAhC,EAAwCG,IAAIM,GAA5C,EAAiD,EAAEN,CAAnD,EAAsD;AACpDF,gBAAUE,CAAV,EAAaR,KAAb,CAAmB,IAAnB,EAAyBW,IAAzB;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAbD;;AAeA;;;;;;;;AAQA3B,QAAQM,SAAR,CAAkByB,SAAlB,GAA8B,UAAStB,KAAT,EAAe;AAC3C,OAAKE,UAAL,GAAkB,KAAKA,UAAL,IAAmB,EAArC;AACA,SAAO,KAAKA,UAAL,CAAgBF,KAAhB,KAA0B,EAAjC;AACD,CAHD;;AAKA;;;;;;;;AAQAT,QAAQM,SAAR,CAAkB0B,YAAlB,GAAiC,UAASvB,KAAT,EAAe;AAC9C,SAAO,CAAC,CAAE,KAAKsB,SAAL,CAAetB,KAAf,EAAsBY,MAAhC;AACD,CAFD","file":"emitter.js","sourceRoot":"../../../../assets/pomelo","sourcesContent":["\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\nwindow.EventEmitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n"]}