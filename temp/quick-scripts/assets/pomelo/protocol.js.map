{"version":3,"sources":["protocol.js"],"names":["exports","ByteArray","global","Protocol","PKG_HEAD_BYTES","MSG_FLAG_BYTES","MSG_ROUTE_CODE_BYTES","MSG_ID_MAX_BYTES","MSG_ROUTE_LEN_BYTES","MSG_ROUTE_CODE_MAX","MSG_COMPRESS_ROUTE_MASK","MSG_TYPE_MASK","Package","Message","TYPE_HANDSHAKE","TYPE_HANDSHAKE_ACK","TYPE_HEARTBEAT","TYPE_DATA","TYPE_KICK","TYPE_REQUEST","TYPE_NOTIFY","TYPE_RESPONSE","TYPE_PUSH","strencode","str","byteArray","length","offset","i","charCode","charCodeAt","codes","j","_buffer","copyArray","strdecode","buffer","bytes","array","end","push","String","fromCharCode","apply","encode","type","body","index","decode","rs","id","compressRoute","route","msg","idBytes","msgHasId","caculateMsgIdBytes","msgLen","msgHasRoute","Error","encodeMsgFlag","encodeMsgId","encodeMsgRoute","encodeMsgBody","bytesLen","byteLength","flag","m","parseInt","Math","pow","routeLen","bodyLen","dest","doffset","src","soffset","copy","len","tmp","next","floor","module","window","Buffer","Uint8Array"],"mappings":"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","file":"protocol.js","sourceRoot":"../../../../assets/pomelo","sourcesContent":["(function (exports, ByteArray, global) {\n  var Protocol = exports;\n\n  var PKG_HEAD_BYTES = 4;\n  var MSG_FLAG_BYTES = 1;\n  var MSG_ROUTE_CODE_BYTES = 2;\n  var MSG_ID_MAX_BYTES = 5;\n  var MSG_ROUTE_LEN_BYTES = 1;\n\n  var MSG_ROUTE_CODE_MAX = 0xffff;\n\n  var MSG_COMPRESS_ROUTE_MASK = 0x1;\n  var MSG_TYPE_MASK = 0x7;\n\n  var Package = Protocol.Package = {};\n  var Message = Protocol.Message = {};\n\n  Package.TYPE_HANDSHAKE = 1;\n  Package.TYPE_HANDSHAKE_ACK = 2;\n  Package.TYPE_HEARTBEAT = 3;\n  Package.TYPE_DATA = 4;\n  Package.TYPE_KICK = 5;\n\n  Message.TYPE_REQUEST = 0;\n  Message.TYPE_NOTIFY = 1;\n  Message.TYPE_RESPONSE = 2;\n  Message.TYPE_PUSH = 3;\n\n  /**\n   * pomele client encode\n   * id message id;\n   * route message route\n   * msg message body\n   * socketio current support string\n   */\n  Protocol.strencode = function(str) {\n    var byteArray = new ByteArray(str.length * 3);\n    var offset = 0;\n    for(var i = 0; i < str.length; i++){\n      var charCode = str.charCodeAt(i);\n      var codes = null;\n      if(charCode <= 0x7f){\n        codes = [charCode];\n      }else if(charCode <= 0x7ff){\n        codes = [0xc0|(charCode>>6), 0x80|(charCode & 0x3f)];\n      }else{\n        codes = [0xe0|(charCode>>12), 0x80|((charCode & 0xfc0)>>6), 0x80|(charCode & 0x3f)];\n      }\n      for(var j = 0; j < codes.length; j++){\n        byteArray[offset] = codes[j];\n        ++offset;\n      }\n    }\n    var _buffer = new ByteArray(offset);\n    copyArray(_buffer, 0, byteArray, 0, offset);\n    return _buffer;\n  };\n\n  /**\n   * client decode\n   * msg String data\n   * return Message Object\n   */\n  Protocol.strdecode = function(buffer) {\n    var bytes = new ByteArray(buffer);\n    var array = [];\n    var offset = 0;\n    var charCode = 0;\n    var end = bytes.length;\n    while(offset < end){\n      if(bytes[offset] < 128){\n        charCode = bytes[offset];\n        offset += 1;\n      }else if(bytes[offset] < 224){\n        charCode = ((bytes[offset] & 0x3f)<<6) + (bytes[offset+1] & 0x3f);\n        offset += 2;\n      }else{\n        charCode = ((bytes[offset] & 0x0f)<<12) + ((bytes[offset+1] & 0x3f)<<6) + (bytes[offset+2] & 0x3f);\n        offset += 3;\n      }\n      array.push(charCode);\n    }\n    return String.fromCharCode.apply(null, array);\n  };\n\n  /**\n   * Package protocol encode.\n   *\n   * Pomelo package format:\n   * +------+-------------+------------------+\n   * | type | body length |       body       |\n   * +------+-------------+------------------+\n   *\n   * Head: 4bytes\n   *   0: package type,\n   *      1 - handshake,\n   *      2 - handshake ack,\n   *      3 - heartbeat,\n   *      4 - data\n   *      5 - kick\n   *   1 - 3: big-endian body length\n   * Body: body length bytes\n   *\n   * @param  {Number}    type   package type\n   * @param  {ByteArray} body   body content in bytes\n   * @return {ByteArray}        new byte array that contains encode result\n   */\n  Package.encode = function(type, body){\n    var length = body ? body.length : 0;\n    var buffer = new ByteArray(PKG_HEAD_BYTES + length);\n    var index = 0;\n    buffer[index++] = type & 0xff;\n    buffer[index++] = (length >> 16) & 0xff;\n    buffer[index++] = (length >> 8) & 0xff;\n    buffer[index++] = length & 0xff;\n    if(body) {\n      copyArray(buffer, index, body, 0, length);\n    }\n    return buffer;\n  };\n\n  /**\n   * Package protocol decode.\n   * See encode for package format.\n   *\n   * @param  {ByteArray} buffer byte array containing package content\n   * @return {Object}           {type: package type, buffer: body byte array}\n   */\n  Package.decode = function(buffer){\n    var offset = 0;\n    var bytes = new ByteArray(buffer);\n    var length = 0;\n    var rs = [];\n    while(offset < bytes.length) {\n      var type = bytes[offset++];\n      length = ((bytes[offset++]) << 16 | (bytes[offset++]) << 8 | bytes[offset++]) >>> 0;\n      var body = length ? new ByteArray(length) : null;\n      copyArray(body, 0, bytes, offset, length);\n      offset += length;\n      rs.push({'type': type, 'body': body});\n    }\n    return rs.length === 1 ? rs[0]: rs;\n  };\n\n  /**\n   * Message protocol encode.\n   *\n   * @param  {Number} id            message id\n   * @param  {Number} type          message type\n   * @param  {Number} compressRoute whether compress route\n   * @param  {Number|String} route  route code or route string\n   * @param  {Buffer} msg           message body bytes\n   * @return {Buffer}               encode result\n   */\n  Message.encode = function(id, type, compressRoute, route, msg){\n    // caculate message max length\n    var idBytes = msgHasId(type) ? caculateMsgIdBytes(id) : 0;\n    var msgLen = MSG_FLAG_BYTES + idBytes;\n\n    if(msgHasRoute(type)) {\n      if(compressRoute) {\n        if(typeof route !== 'number'){\n          throw new Error('error flag for number route!');\n        }\n        msgLen += MSG_ROUTE_CODE_BYTES;\n      } else {\n        msgLen += MSG_ROUTE_LEN_BYTES;\n        if(route) {\n          route = Protocol.strencode(route);\n          if(route.length>255) {\n            throw new Error('route maxlength is overflow');\n          }\n          msgLen += route.length;\n        }\n      }\n    }\n\n    if(msg) {\n      msgLen += msg.length;\n    }\n\n    var buffer = new ByteArray(msgLen);\n    var offset = 0;\n\n    // add flag\n    offset = encodeMsgFlag(type, compressRoute, buffer, offset);\n\n    // add message id\n    if(msgHasId(type)) {\n      offset = encodeMsgId(id, buffer, offset);\n    }\n\n    // add route\n    if(msgHasRoute(type)) {\n      offset = encodeMsgRoute(compressRoute, route, buffer, offset);\n    }\n\n    // add body\n    if(msg) {\n      offset = encodeMsgBody(msg, buffer, offset);\n    }\n\n    return buffer;\n  };\n\n  /**\n   * Message protocol decode.\n   *\n   * @param  {Buffer|Uint8Array} buffer message bytes\n   * @return {Object}            message object\n   */\n  Message.decode = function(buffer) {\n    var bytes =  new ByteArray(buffer);\n    var bytesLen = bytes.length || bytes.byteLength;\n    var offset = 0;\n    var id = 0;\n    var route = null;\n\n    // parse flag\n    var flag = bytes[offset++];\n    var compressRoute = flag & MSG_COMPRESS_ROUTE_MASK;\n    var type = (flag >> 1) & MSG_TYPE_MASK;\n\n    // parse id\n    if(msgHasId(type)) {\n      var m = parseInt(bytes[offset]);\n      var i = 0;\n      do{\n        var m = parseInt(bytes[offset]);\n        id = id + ((m & 0x7f) * Math.pow(2,(7*i)));\n        offset++;\n        i++;\n      }while(m >= 128);\n    }\n\n    // parse route\n    if(msgHasRoute(type)) {\n      if(compressRoute) {\n        route = (bytes[offset++]) << 8 | bytes[offset++];\n      } else {\n        var routeLen = bytes[offset++];\n        if(routeLen) {\n          route = new ByteArray(routeLen);\n          copyArray(route, 0, bytes, offset, routeLen);\n          route = Protocol.strdecode(route);\n        } else {\n          route = '';\n        }\n        offset += routeLen;\n      }\n    }\n\n    // parse body\n    var bodyLen = bytesLen - offset;\n    var body = new ByteArray(bodyLen);\n\n    copyArray(body, 0, bytes, offset, bodyLen);\n\n    return {'id': id, 'type': type, 'compressRoute': compressRoute,\n            'route': route, 'body': body};\n  };\n\n  var copyArray = function(dest, doffset, src, soffset, length) {\n    if('function' === typeof src.copy) {\n      // Buffer\n      src.copy(dest, doffset, soffset, soffset + length);\n    } else {\n      // Uint8Array\n      for(var index=0; index<length; index++){\n        dest[doffset++] = src[soffset++];\n      }\n    }\n  };\n\n  var msgHasId = function(type) {\n    return type === Message.TYPE_REQUEST || type === Message.TYPE_RESPONSE;\n  };\n\n  var msgHasRoute = function(type) {\n    return type === Message.TYPE_REQUEST || type === Message.TYPE_NOTIFY ||\n           type === Message.TYPE_PUSH;\n  };\n\n  var caculateMsgIdBytes = function(id) {\n    var len = 0;\n    do {\n      len += 1;\n      id >>= 7;\n    } while(id > 0);\n    return len;\n  };\n\n  var encodeMsgFlag = function(type, compressRoute, buffer, offset) {\n    if(type !== Message.TYPE_REQUEST && type !== Message.TYPE_NOTIFY &&\n       type !== Message.TYPE_RESPONSE && type !== Message.TYPE_PUSH) {\n      throw new Error('unkonw message type: ' + type);\n    }\n\n    buffer[offset] = (type << 1) | (compressRoute ? 1 : 0);\n\n    return offset + MSG_FLAG_BYTES;\n  };\n\n  var encodeMsgId = function(id, buffer, offset) {\n    do{\n      var tmp = id % 128;\n      var next = Math.floor(id/128);\n\n      if(next !== 0){\n        tmp = tmp + 128;\n      }\n      buffer[offset++] = tmp;\n\n      id = next;\n    } while(id !== 0);\n\n    return offset;\n  };\n\n  var encodeMsgRoute = function(compressRoute, route, buffer, offset) {\n    if (compressRoute) {\n      if(route > MSG_ROUTE_CODE_MAX){\n        throw new Error('route number is overflow');\n      }\n\n      buffer[offset++] = (route >> 8) & 0xff;\n      buffer[offset++] = route & 0xff;\n    } else {\n      if(route) {\n        buffer[offset++] = route.length & 0xff;\n        copyArray(buffer, offset, route, 0, route.length);\n        offset += route.length;\n      } else {\n        buffer[offset++] = 0;\n      }\n    }\n\n    return offset;\n  };\n\n  var encodeMsgBody = function(msg, buffer, offset) {\n    copyArray(buffer, offset, msg, 0, msg.length);\n    return offset + msg.length;\n  };\n\n  module.exports = Protocol;\n  if(typeof(window) != \"undefined\") {\n    window.Protocol = Protocol;\n  }\n})(typeof(window)==\"undefined\" ? module.exports : {},typeof(window)==\"undefined\"  ? Buffer : Uint8Array, this);\n"]}